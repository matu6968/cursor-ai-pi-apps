name: Build and Package Debian based App from AppImage file

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-package:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Remove not required files
    - name: Remove not required files
      run: |
        git clone https://github.com/matu6968/cursor-ai-pi-apps.git
        rm LICENSE
        rm README.md

    # Step 3: Download AppImage file
    - name: Download AppImage
      run: |
        APPIMAGE_URL="https://downloader.cursor.sh/linux/appimage/arm64"
        curl -O -J "$APPIMAGE_URL"
        echo "Downloaded AppImage file"

    # Step 4: Extract version from AppImage file name
    - name: Extract Version
      run: |
        for file in "$DIR"/cursor-*arm64.AppImage; do
          # Check if the file exists
          if [[ -f "$file" ]]; then
            echo "Processing file: $file"
            export APPIMAGE_NAME=$file
            echo "APPIMAGE_NAME=$file" >> $GITHUB_ENV
            
            # Make the file executable
            chmod +x "$file"
            echo "Made executable: $file"

            # Extract the version from the file name
            if [[ "$file" =~ cursor-([0-9]+\.[0-9]+\.[0-9]+)arm64.AppImage ]]; then
              version="${BASH_REMATCH[1]}"
              echo "Extracted version: $version"
              echo "VERSION=$version" >> $GITHUB_ENV
              export VERSION=$version
            else
              echo "Could not extract version from $file"
            fi
         else
            echo "No matching files found."
         fi
     done

    # Step 5: Extract AppImage file
    - name: Extract AppImage
      run: |
        chmod +x "$APPIMAGE_NAME"
        "./$APPIMAGE_NAME" --appimage-extract

    # Step 6: Copy files from extacted AppImage
    - name: Copy Files from extracted AppImage
      run: |
        mkdir -p usr/share/cursor
        cp -r squashfs-root/* usr/share/cursor
        rm -rf squashfs-root
        rm $APPIMAGE_NAME

    # Step 7: Create Debian package
    - name: Create Debian Package
      run: |
        rm DEBIAN/control
        cat <<EOF >> DEBIAN/control
Package: Cursor
Section: devel
Depends: ca-certificates, libasound2 (>= 1.0.17), libatk-bridge2.0-0 (>= 2.5.3), libatk1.0-0 (>= 2.2.0), libatspi2.0-0 (>= 2.9.90), libc6 (>= 2.17), libc6 (>= 2.25), libc6 (>= 2.28), libcairo2 (>= 1.6.0), libcurl3-gnutls | libcurl3-nss | libcurl4 | libcurl3, libdbus-1-3 (>= 1.9.14), libdrm2 (>= 2.4.75), libexpat1 (>= 2.1~beta3), libgbm1 (>= 17.1.0~rc2), libglib2.0-0 (>= 2.37.3), libgtk-3-0 (>= 3.9.10), libgtk-3-0 (>= 3.9.10) | libgtk-4-1, libnspr4 (>= 2:4.9-2~), libnss3 (>= 2:3.30), libnss3 (>= 3.26), libpango-1.0-0 (>= 1.14.0), libstdc++6 (>= 4.1.1), libstdc++6 (>= 5), libstdc++6 (>= 5.2), libstdc++6 (>= 6), libx11-6, libx11-6 (>= 2:1.4.99.1), libxcb1 (>= 1.9.2), libxcomposite1 (>= 1:0.4.4-1), libxdamage1 (>= 1:1.1), libxext6, libxfixes3, libxkbcommon0 (>= 0.5.0), libxkbfile1 (>= 1:1.1.0), libxrandr2, xdg-utils (>= 1.0.2)
Recommends: libvulkan1
Provides: cursor
Conflicts: cursor
Replaces: cursor
Architecture: arm64
Maintainer: Cursor <hi@cursor.com>
Homepage: https://cursor.com/
Priority: optional
Version: $version
Description: AI focused code editor based on Visual Studio Code.
        EOF
        chmod 0755 -R usr/share/cursor/*
        chmod 0755 -R DEBIAN/*
        dpkg-deb --build . cursor_"$VERSION"_arm64.deb
        echo "Generated: cursor_$VERSION_arm64.deb"
        echo "DEB_FILE=cursor_$VERSION_arm64.deb" >> $GITHUB_ENV

    # Step 8: Upload Debian package to GitHub Releases
    - name: Upload to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ env.DEB_FILE }}
        asset_name: cursor_${{ env.VERSION }}_arm64.deb
        asset_content_type: application/vnd.debian.binary-package
